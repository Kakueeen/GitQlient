name: Build Project
on:
  workflow_call:
env:
  VERSION: 1.6.3

jobs:
  Tarball:
    name: Generate tarball
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo pip install git-archive-all
      - name: Checking out the code
        uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Create Tarball
        run: |
          git-archive-all --prefix=gitqlient_${{env.VERSION}} gitqlient_${{env.VERSION}}.tar.gz
      - name: Upload tarball
        uses: actions/upload-artifact@v4
        with:
          name: tarball
          path: |
            gitqlient_${{env.VERSION}}.tar.gz


  Ubuntu:
    name: Ubuntu
    strategy:
      matrix:
        os: [ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Checking out the code
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Install dependencies
        id: vars
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install libgl1-mesa-dev libxkbcommon-x11-0 libc6-i386 build-essential libgl1-mesa-dev mesa-common-dev libgles2-mesa-dev libxkbcommon-x11-0 libxcb-icccm4-dev libxcb-xinerama0 libxcb-image0 libxcb-keysyms1 libxcb-* fakeroot
          sudo apt-get -qq remove gcc g++
          sudo apt-get install -y -qq gcc-9 g++-9
          sudo ln -s /usr/bin/g++-9 /usr/bin/g++
          sudo ln -s /usr/bin/gcc-9 /usr/bin/gcc
          sudo pip install git-archive-all
          sudo apt-get -qq install qt5-qmake qt5-default

      - name: Compile
        run: |
          qmake -v
          mkdir build
          qmake GitQlient.pro PREFIX=$(pwd)/AppImage/gitqlient/usr VERSION=${{env.VERSION}}
          make -j 4
          make install

      - name: Build DEB package
        run: |
          echo "Version: ${{env.VERSION}}" >> deb_pkg/DEBIAN/control
          echo "Standards-Version: ${{env.VERSION}}" >> deb_pkg/DEBIAN/control
          mkdir -p deb_pkg/usr/bin
          cp gitqlient deb_pkg/usr/bin/
          mv deb_pkg gitqlient_${{env.VERSION}}_amd64
          mkdir -p gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/scalable/apps
          cp ./src/resources/icons/GitQlientLogo.svg gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/scalable/apps/gitqlient.svg
          mkdir -p gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/16x16/apps/
          cp ./src/resources/icons/GitQlientLogo16.png gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/16x16/apps/gitqlient.png
          mkdir -p gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/24x24/apps/
          cp ./src/resources/icons/GitQlientLogo24.png gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/24x24/apps/gitqlient.png
          mkdir -p gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/32x32/apps/
          cp ./src/resources/icons/GitQlientLogo32.png gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/32x32/apps/gitqlient.png
          mkdir -p gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/48x48/apps/
          cp ./src/resources/icons/GitQlientLogo48.png gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/48x48/apps/gitqlient.png
          mkdir -p gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/64x64/apps/
          cp ./src/resources/icons/GitQlientLogo64.png gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/64x64/apps/gitqlient.png
          mkdir -p gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/96x96/apps/
          cp ./src/resources/icons/GitQlientLogo96.png gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/96x96/apps/gitqlient.png
          mkdir -p gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/128x128/apps/
          cp ./src/resources/icons/GitQlientLogo128.png gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/128x128/apps/gitqlient.png
          mkdir -p gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/256x256/apps/
          cp ./src/resources/icons/GitQlientLogo256.png gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/256x256/apps/gitqlient.png
          mkdir -p gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/512x512/apps/
          cp ./src/resources/icons/GitQlientLogo512.png gitqlient_${{env.VERSION}}_amd64/usr/share/icons/hicolor/512x512/apps/gitqlient.png
          fakeroot dpkg-deb -v --build gitqlient_${{env.VERSION}}_amd64
          cp *.deb ../

      - name: Uploading
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            gitqlient*.deb
            gitqlient_${{env.VERSION}}.tar.gz

      - name: Download tarball
        uses: actions/download-artifact@v4
        with:
          name: tarball
          path: |
            gitqlient_${{env.VERSION}}.tar.gz

  Fedora:
    name: Fedora
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        fedora_version: [ '39', '40', '41' ]
    container:
      image: fedora:${{matrix.fedora_version}}
    steps:
      - name: Update repositories
        run: dnf -y update
      - name: Upgrade packages
        run: dnf -y upgrade
      - name: Install dependencies
        run: >
            dnf -y install
            @development-tools
            redhat-lsb-core
            which
            git
            glibc
            gcc-c++
            rpmdevtools
            make
            cmake
            pkgconfig
            glib
            man
            tar
            gettext
            openssh
            rsync
            boost-devel
            sqlite-devel
            alsa-lib-devel
            pulseaudio-libs-devel
            libnotify-devel
            libicu-devel
            qt6-qtbase-devel
            qt6-qtbase-private-devel
            qt6-qttools-devel
            gstreamer1-devel
            gstreamer1-plugins-base-devel
            taglib-devel
            libcdio-devel
            libgpod-devel
            libmtp-devel
            libchromaprint-devel
            libebur128-devel
            fftw-devel
            desktop-file-utils
            libappstream-glib
            hicolor-icon-theme
            kdsingleapplication-qt6-devel
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Compile
        run: |
          mkdir build
          qmake GitQlient.pro CONFIG+=_LIBCPP_DISABLE_AVAILABILITY VERSION=${{env.VERSION}}
          make -j 4
      - name: Download tarball
        uses: actions/download-artifact@v4
        with:
          name: tarball
          path: |
            gitqlient_${{env.VERSION}}.tar.gz
      - name: Create RPM build sources directories
        working-directory: build
        run: mkdir -p rpmbuild/SOURCES /usr/src/packages/SOURCES
      - name: Copy source tarball
        working-directory: build
        run: cp gitqlient_${{env.VERSION}}.tar.gz rpmbuild/SOURCES/
      - name: Build RPM
        env:
          RPM_BUILD_NCPUS: "2"
        working-directory: build
        run: rpmbuild -ba ../contrib/rpm/strawberry.spec
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: fedora-${{matrix.fedora_version}}
          path: |
            rpmbuild/SRPMS/*.rpm
            rpmbuild/RPMS/x86_64/*.rpm

  Windows:
    name: Windows
    strategy:
      matrix:
        env:
          - name: Windows
            os: windows-2019
    runs-on: ${{ matrix.env.os }}
    steps:
      - name: Checking out the code
        uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        timeout-minutes: 10
        with:
          version: 6.6.*
          target: desktop
          host: windows
          install-deps: true
          arch: win64_mingw
          aqtversion: '==3.1.*'

      - name: Install dependencies
        run: choco install jom -y

      #- name: Build GitQlient
      #  run: |
      #    # Setup VS compiler
      #    cmd.exe /c "call `"C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat`" && set > %temp%\vcvars.txt"
      #    Get-Content "$env:temp\vcvars.txt" | Foreach-Object { if ($_ -match "^(.*?)=(.*)$") { Set-Content "env:\$($matches[1])" $matches[2] } }
      #    qmake GitQlient.pro VERSION=${{env.VERSION}}
      #    jom -j2

      - name: Compile
        run: |
          mkdir build
          qmake GitQlient.pro CONFIG+=_LIBCPP_DISABLE_AVAILABILITY VERSION=${{env.VERSION}}
          make -j 4
          make install

  MacOS:
    runs-on: ${{ matrix.env.os }}
    strategy:
      matrix:
        env:
          - name: MacOS
            os: macos-latest
            qtplatform: mac
    steps:
      - name: Checking out the code
        uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: Installing Qt
        uses: jurplel/install-qt-action@v3
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        timeout-minutes: 10
        with:
          version: 6.6.*
          target: desktop
          host: mac
          install-deps: true
          aqtversion: '==3.1.*'

      - name: Installing dependencies
        id: vars
        run: |
          brew install glew
          brew install create-dmg
          brew uninstall --force --ignore-dependencies java

      - name: Compile
        run: |
          mkdir build
          qmake GitQlient.pro CONFIG+=_LIBCPP_DISABLE_AVAILABILITY VERSION=${{env.VERSION}}
          make -j 4
          make install

      - name: Build DMG
        run:
          make dmg

      - name: Uploading GitQlient DMG
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: GitQlient-*

  Appimage:
    name: AppImage
    strategy:
      matrix:
        os: [ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checking out the code
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Install dependencies
        id: vars
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install libgl1-mesa-dev libxkbcommon-x11-0 libc6-i386 build-essential libgl1-mesa-dev mesa-common-dev libgles2-mesa-dev libxkbcommon-x11-0 libxcb-icccm4-dev libxcb-xinerama0 libxcb-image0 libxcb-keysyms1 libxcb-* fakeroot
          sudo apt-get -qq remove gcc g++
          sudo apt-get install -y -qq gcc-9 g++-9
          sudo ln -s /usr/bin/g++-9 /usr/bin/g++
          sudo ln -s /usr/bin/gcc-9 /usr/bin/gcc
          sudo pip install git-archive-all

      - name: Create Tarball
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          git-archive-all --prefix=gitqlient_${{env.VERSION}} gitqlient_${{env.VERSION}}.tar.gz

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        timeout-minutes: 10
        with:
          version: 6.6.*
          target: desktop
          host: linux
          install-deps: true
          aqtversion: '==3.1.*'

      - name: Compile
        run: |
          qmake -v
          mkdir build
          qmake GitQlient.pro PREFIX=$(pwd)/AppImage/gitqlient/usr VERSION=${{env.VERSION}}
          make -j 4
          make install

      - name: Build AppImage
        run: |
          wget -q -O linuxdeployqt https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
          chmod +x linuxdeployqt
          ./linuxdeployqt AppImage/gitqlient/usr/share/applications/*.desktop -appimage -no-translations -bundle-non-qt-libs -extra-plugins=iconengines,imageformats
          chmod +x GitQlient-*
          cp GitQlient-* ../

      - name: Uploading
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: GitQlient-*
